{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/2023-06-08---Socket.io","result":{"data":{"markdownRemark":{"id":"68f4bc5b-2ce0-58bd-bf17-a019d07c6fbd","html":"<h2 id=\"背景\" style=\"position:relative;\"><a href=\"#%E8%83%8C%E6%99%AF\" aria-label=\"背景 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>背景</h2>\n<p>在早些HTTP協議開發時，並不是為了雙向溝通而準備的，起初只要網站請求-回應這樣就好了，所以為擁有雙向溝通的網站，只能透過HTTP輪詢的方式達成，因此有了<code class=\"language-text\">長輪詢</code> 與<code class=\"language-text\">短輪詢</code></p>\n<p>**短輪詢：**透過Client端定期詢問Server是否有新的資料，輪詢間隔大了資料不夠即時正確，但間隔小的話，則會消耗過多的流量增加伺服器的負擔。</p>\n<p>**長輪詢：**是對短輪詢的優化，需要Server做對應的修改來支持此事，Client端向Server端發送請求時，如果沒有新的資料產生，並不立刻回傳，而是Hold住一段時間等有新的資料或者超時再回傳。</p>\n<p>但每一次請求包含較長的header，其中真正有效的資料可能只是很小的一部分，顯然會消耗過多的資源，因此，有了Websocket的出現，</p>\n<p><strong>WebSocket</strong>，是一種網絡傳輸協議，位於 OSI 模型的應用層，可在單個 TCP 連接上進行全雙工（兩個方向上同時傳輸）通訊，能更好的節省服務器資源和頻寬並達到即時通訊，<strong>客戶端和服務器只需要完成一次握手，兩者之間就可以創建持久性的連接</strong>，並進行雙向數據傳輸，與HTTP使用一樣port。WebSocket預設使用80 port，協議為<code class=\"language-text\">ws://</code>，TLS加密請求使用443 port，協議為<code class=\"language-text\">wss://</code>。</p>\n<h3 id=\"握手\" style=\"position:relative;\"><a href=\"#%E6%8F%A1%E6%89%8B\" aria-label=\"握手 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>握手</strong></h3>\n<p>使用 HTTP 進行實現。由客戶端使用 http 的方式發起握手請求，服務端接請求後，將當前正在使用的連接（TCP）的協議，由 http 協議切換爲 websocket 協議。</p>\n<p>Request</p>\n<p>握手請求頭會帶有 <code class=\"language-text\">Upgrade</code> 參數用於升級協議類型</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token constant\">GET</span> <span class=\"token operator\">/</span> <span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\n<span class=\"token literal-property property\">Upgrade</span><span class=\"token operator\">:</span> websocket\n<span class=\"token literal-property property\">Connection</span><span class=\"token operator\">:</span> Upgrade\n<span class=\"token literal-property property\">Host</span><span class=\"token operator\">:</span> example<span class=\"token punctuation\">.</span>com\n<span class=\"token literal-property property\">Origin</span><span class=\"token operator\">:</span> http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>example<span class=\"token punctuation\">.</span>com\nSec<span class=\"token operator\">-</span>WebSocket<span class=\"token operator\">-</span>Key<span class=\"token operator\">:</span> sN9cRrP<span class=\"token operator\">/</span>n9NdMgdcy2VJFQ<span class=\"token operator\">==</span>\nSec<span class=\"token operator\">-</span>WebSocket<span class=\"token operator\">-</span>Version<span class=\"token operator\">:</span> <span class=\"token number\">13</span></code></pre></div>\n<p>Response</p>\n<p><code class=\"language-text\">HTTP/1.1101 Switching Protocols</code>表示服務端接受 WebSocket 協議的客戶端連接</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span> <span class=\"token number\">101</span> Switching Protocols\n<span class=\"token literal-property property\">Upgrade</span><span class=\"token operator\">:</span> websocket\n<span class=\"token literal-property property\">Connection</span><span class=\"token operator\">:</span> Upgrade\nSec<span class=\"token operator\">-</span>WebSocket<span class=\"token operator\">-</span>Accept<span class=\"token operator\">:</span> fFBooB7FAkLlXgRSz0BT3v4hq5s<span class=\"token operator\">=</span>\nSec<span class=\"token operator\">-</span>WebSocket<span class=\"token operator\">-</span>Location<span class=\"token operator\">:</span> ws<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">example.com</span><span class=\"token regex-delimiter\">/</span></span></code></pre></div>\n<h3 id=\"數據傳輸\" style=\"position:relative;\"><a href=\"#%E6%95%B8%E6%93%9A%E5%82%B3%E8%BC%B8\" aria-label=\"數據傳輸 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>數據傳輸</h3>\n<p>服務端接收握手請求後，回覆 response 消息，一旦這個握手回覆發送出去，服務端就認爲此 WebSocket 連接已經建立成功，處於 OPEN 狀態。它就可以開始發送數據了。WebSocket 中所有發送的數據使用<code class=\"language-text\">frame</code>的形式發送</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/751b6737-34b0-4bb2-aa3f-fd0bf79994b3/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7_2023-06-04_%E4%B8%8A%E5%8D%887.06.56.png\" alt=\"螢幕快照 2023-06-04 上午7.06.56.png\"></p>\n<ul>\n<li>建立在 TCP 協議之上，服務器端的實現比較容易。</li>\n<li>可以發送文字，也可以發送二進位資料。</li>\n<li>數據格式比較輕量，性能開銷小，通訊高效。</li>\n<li>沒有同源限制，客戶端可以與任意服務器通訊。</li>\n</ul>\n<h2 id=\"socketio-簡介\" style=\"position:relative;\"><a href=\"#socketio-%E7%B0%A1%E4%BB%8B\" aria-label=\"socketio 簡介 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Socket.io 簡介</h2>\n<p><a href=\"http://socket.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Socket.IO</a> 創建於 2010 年。它的開發是為了使用開放連接來促進即時通訊，允許客戶端與伺服器進行雙向通訊，為了連接雙方並交換資料，有一個瀏覽器端的套件與伺服器端的套件，都是屬於事件驅動，其底層使用<code class=\"language-text\">Engine.io</code> 。Socket.io 基於使用Websocket協議，如果因為環境無法建立Websocket連接則會退回HTTP長輪詢。</p>\n<h3 id=\"應用場景\" style=\"position:relative;\"><a href=\"#%E6%87%89%E7%94%A8%E5%A0%B4%E6%99%AF\" aria-label=\"應用場景 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>應用場景</h3>\n<ul>\n<li>聊天室</li>\n<li>共同編輯</li>\n<li>即時更新系統</li>\n<li>社交訂閱通知</li>\n<li>多人玩家遊戲</li>\n</ul>\n<p>特點**：**</p>\n<ul>\n<li>Socket.IO 通過命名空間支持多路復用。使用命名空間使能夠最大限度地減少使用的 TCP 連接數</li>\n<li>服務器端靈活地向所有連接的客戶端廣播事件。還可以通過房間功能向部分客戶廣播事件。</li>\n<li>提供HTTP 長輪詢作為後備選項，這在不支持 WebSockets 的環境中很有用</li>\n<li>提供了一種可配置的 Ping/Pong 心跳機制，檢測連接是否存在。此外，如果客戶端斷開連接，它會自動重新連接</li>\n<li>Socket.IO 具有有限的本機安全功能。例如，它不提供端到端加密，也不提供生成和更新令牌以進行身份驗證的機制。</li>\n<li>Socket.IO 與任何其他 WebSocket 實現都不兼容。</li>\n<li>Socket.IO 不保證精確一次(exactly-once )消息語義。默認情況下，提供至多一次(At-most-once)保證。Socket.IO 也可以配置為提供至少一次(At-least-once)保證，這會帶來額外的工程複雜性——必須使用確認、超時、為每個事件分配唯一 ID 並將事件保存在資料庫中。</li>\n</ul>\n<p>心跳機制設定時間</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> httpServer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>httpServer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">pingInterval</span><span class=\"token operator\">:</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// how often to ping/pong.</span>\n  <span class=\"token literal-property property\">pingTimeout</span><span class=\"token operator\">:</span> <span class=\"token number\">30000</span> <span class=\"token comment\">// time after which the connection is considered timed-out.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"demo-code-以-nodejs-為例\" style=\"position:relative;\"><a href=\"#demo-code-%E4%BB%A5-nodejs-%E7%82%BA%E4%BE%8B\" aria-label=\"demo code 以 nodejs 為例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Demo code 以 Node.js 為例</h3>\n<p>安裝相關套件</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> intall express socket.io</code></pre></div>\n<p>建立一個HTTP伺服器並整合socket.io</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> socket <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 整合socket.io</span>\n<span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Server</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onConnection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Socket.io connect success\"</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nio<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> onConnection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server listening at port %d\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>準備一個網頁並透過socket.io連接到Server</p>\n<p><code class=\"language-text\">main.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> socket <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect server success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"emitting-events\" style=\"position:relative;\"><a href=\"#emitting-events\" aria-label=\"emitting events permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Emitting events</strong></h3>\n<p>網站傳送資料</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Server 接收訊息</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">receive: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"broadcasting\" style=\"position:relative;\"><a href=\"#broadcasting\" aria-label=\"broadcasting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Broadcasting</h3>\n<p>廣播給所有人</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span>broadcast<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"namespaces-vs-rooms\" style=\"position:relative;\"><a href=\"#namespaces-vs-rooms\" aria-label=\"namespaces vs rooms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NameSpaces V.S. Rooms</h3>\n<p>它們兩個存在的原因都是為了<code class=\"language-text\">分組</code>，把要傳送的訊息，送到你想要的群組中。</p>\n<p>namespace在服務器上創建，並從客戶端加入(<code class=\"language-text\">io.connect('/namespace')</code>)，在沒有指定namespace時，預設為<code class=\"language-text\">/</code> ，以非常具體的工作命名，像是<code class=\"language-text\">news</code>, <code class=\"language-text\">games</code> 等。</p>\n<p>room是namespace的子通道。room純粹是服務器端的創建，像是在一個大主題下建立了很多不同小主題，每個 room 只屬於某個 namespace, 只能收聽同一個 namespace的消息。</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0c8d3138-f2a9-4cd0-9906-efd7d206a9f8/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7_2023-06-02_%E4%B8%8A%E5%8D%886.23.06.png\" alt=\"螢幕快照 2023-06-02 上午6.23.06.png\"></p>\n<h3 id=\"namespaces\" style=\"position:relative;\"><a href=\"#namespaces\" aria-label=\"namespaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Namespaces</h3>\n<p>client連接至<code class=\"language-text\">users</code>的空間</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> userSocket <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Server 創立一個<code class=\"language-text\">users</code> 的io</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> userIo <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nuserIo<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connected to user namespace\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"rooms\" style=\"position:relative;\"><a href=\"#rooms\" aria-label=\"rooms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rooms</h3>\n<p>加入房間(Server-side)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"join-room\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">cb</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 加入同一空間的房間</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"room\"</span><span class=\"token punctuation\">,</span> room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// call back messages</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Joined </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>room<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如果從Client端帶房號進來，就發送訊息至此房間</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onConnection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message<span class=\"token punctuation\">,</span> room</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 廣播給在同一空間的所有人</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      socket<span class=\"token punctuation\">.</span>broadcast<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 發送訊息給對應的房間</span>\n      socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"middleware\" style=\"position:relative;\"><a href=\"#middleware\" aria-label=\"middleware permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Middleware</h3>\n<ul>\n<li>logging</li>\n<li>authentication / authorization</li>\n<li>rate limiting</li>\n</ul>\n<p><strong>Sending credentials</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> userSocket <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">auth</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">token</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">userIo<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">socket<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isValidToken</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>handshake<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token is valid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please send correct token.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Client side Receive errors</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect_error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"參考資料\" style=\"position:relative;\"><a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\" aria-label=\"參考資料 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>參考資料</h3>\n<p><a href=\"https://socket.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官網</a></p>\n<p><a href=\"https://socket.io/docs/v4/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Introduction | Socket.IO</a></p>\n<p><a href=\"https://github.com/socketio/engine.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/socketio/engine.io</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=ZKEqqIO7n-k&#x26;ab_channel=WebDevSimplified\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=ZKEqqIO7n-k&#x26;ab_channel=WebDevSimplified</a></p>\n<p><a href=\"https://socket.io/docs/v4/delivery-guarantees\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Delivery guarantees | Socket.IO</a></p>\n<p><a href=\"https://juejin.cn/post/6844903857558913038\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">谈谈流计算中的『Exactly Once』特性 - 掘金</a></p>\n<p><a href=\"https://mark-lin.com/posts/20170914/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Socket.io 的說話島 | 拿鐵派的馬克 Blog</a></p>\n<p><a href=\"https://www.readfog.com/a/1649297763805007872\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebSocket 是什麼？爲什麼能持久連接？</a></p>\n<p><a href=\"https://blog.csdn.net/u011723584/article/details/89301012\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nodejs+webSocket搭建多人聊天室_node.js多人聊天室_@听风者的博客-CSDN博客</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1548103\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">基于node+socket.io+redis的多房间多进程聊天室-腾讯云开发者社区-腾讯云</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/346650330\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebSocket和Socket.io之间的区别(译)</a></p>\n<p><a href=\"https://leesonhsu.blogspot.com/2018/07/socketwebsocketsocketio.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">【筆記】Socket，Websocket，Socket.io的差異</a></p>\n<p><a href=\"https://www.section.io/engineering-education/creating-a-real-time-chat-app-with-react-socket-io-with-e2e-encryption/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Creating a Real Time Chat App using React and Socket IO with E2E Encryption | Engineering Education (EngEd) Program | Section</a></p>\n<p><a href=\"https://medium.com/@ipenywis/node-js-socket-io-namespaces-rooms-and-connections-02-14e84dbdba46\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js Socket.io Namespaces, Rooms and Connections 02</a></p>\n<hr>\n<p><a href=\"https://ably.com/topic/socketio-vs-websocket\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Websocket v.s. Socket.io</a></p>","fields":{"slug":"/posts/2023-06-08---Socket.io//posts/2023-06-08---Socket.io","tagSlugs":["/tag/websocket/","/tag/socketio/"]},"frontmatter":{"date":"2023-06-08T22:40:32.169Z","description":"在早些HTTP協議開發時，並不是為了雙向溝通而準備的，起初只要網站請求-回應這樣就好了，所以為擁有雙向溝通的網站，只能透過HTTP輪詢的方式達成，因此有了長輪詢 與短輪詢","tags":["Websocket","Socket.io"],"title":"用Socket.io實現即時通訊","socialImage":null}}},"pageContext":{"slug":"/posts/2023-06-08---Socket.io//posts/2023-06-08---Socket.io"}},"staticQueryHashes":["251939775","2764776372","401334301"]}